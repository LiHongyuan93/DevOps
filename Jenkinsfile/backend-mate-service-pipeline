pipeline{
    agent any
    parameters{
        choice(name: "SERVICE_NAME",
        choices: ["null","backend-2/mate-activity-service","backend-1/mate-basic-service","backend-1/mate-teach-service","Iris/mate-common-service-test","Iris/mate-contract-service-test"],
        description: "")

        choice(name: "BRANCH",
        choices: ["null","dev","test"，"iris"],
        description: "")
    }
    stages {
        stage('Prepare') {
            steps{
                sh '''
                    git clone git@git.gymbomate.com:$mate_service.git       # 拉取代码
                    service=(${mate_service//// })                          # 获取微服务名
                    cd ${service[1]}                                        # 进入项目
                    service_path=`pwd`                                      # 获取service路径
                    echo "拉取代码: $mate_service"
                 '''
            }
        }
        stage('Check common version') {
            steps{
                sh "./check_common_version.sh $SERVICE_NAME $BRANCH"
            }
        }
        stage('Build common service') {
            steps{
                when {
                    branch "$BRANCH"

                 }
                sh '''
                    echo "检测到没有common的版本号，现在调用common dev job 进行构建"
                    /usr/bin/java -jar /root/jenkins-cli.jar -auth iris:c704a1f555c4d77923f2b317bfd032eb -s http://172.16.13.101:8080/ build backend-mate-common-service-dev &
                    sleep 90
                '''
            }
        }
        stage('Check common version again') {
            steps{
                when {
                    branch "$BRANCH"
                    environment name: 'CHECK_COMMON', value: '1'
                 }
                echo "test"
            }
        }
        stage('Build') {
            when {
                branch "$BRANCH"
             }
            steps{
                echo "test"
            }
        }
        stage('Push') {
            when {
                branch "$BRANCH"
             }
            steps{
                echo "生成镜像并推送到阿里云镜像仓库"
            }
        }
        stage('Deploy to rancher') {
            when {
                branch "$BRANCH"
             }
            steps{
                echo "test"
            }
        }
        stage('test') {
            steps{
                echo "test"
            }
        }

    }
    post {
        always {
            cleanWs()
        }
    }
}
